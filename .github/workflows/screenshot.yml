name: screenshot
on:
  workflow_dispatch:
    inputs:
      data:
        description: "data"
        required: true
        default: "null"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: run bun install workspace
        run: bun install

      - name: kirim data ke firebase
        if: always()
        run: |
          # Kirim data ke Firebase Database
          curl -X DELETE \
            -H "Content-Type: application/json" \
            "${{ secrets.FBS_DB_URL }}/logs/build/${{ fromJson(inputs.data).namespace }}/log.json"

      # Ambil screenshot menggunakan Puppeteer
      - name: Take screenshot
        run: |
          bun add playwright
          echo "Installing playwright..."
          bunx playwright install  
          E=$(cat <<EOF
          import { chromium } from 'playwright';

          (async () => {
            console.log("Launching browser...");
            const browser = await chromium.launch();
            const page = await browser.newPage();
            console.log("Navigating to URL...");
            await page.goto('https://darmasaba.muku.id');
            console.log("Taking screenshot...");
            await page.screenshot({ fullPage: true, path: 'screenshot.png' });
            await browser.close();
          })();
          EOF
          )

          bun -e "$E"
          ls

      - name: finish
        if: always()
        run: |
          # Encode gambar ke base64
          BASE64_CONTENT=$(base64 screenshot.png | tr -d '\n')

          RANDOM_NAME=$(date +%s%N | md5sum | head -c 10)

          # Upload ke repository
          RESULT=$(curl -X PUT \
            -s \
            -H "Authorization: token ${{ secrets.WIBU_GIT_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{
            "message": "Upload image",
            "content": "'"$BASE64_CONTENT"'",
            "branch": "main"
            }' \
            https://api.github.com/repos/bipproduction/assets/contents/images/${RANDOM_NAME}.jpg | jq -r '.content.download_url'
          )

          # Kirim data ke Firebase Database
          curl -X POST \
            -H "Content-Type: application/json" \
            -d "{\"screenshot\": \"$RESULT\"}" \
            "${{ secrets.FBS_DB_URL }}/logs/build/${{ fromJson(inputs.data).namespace }}/log.json"
